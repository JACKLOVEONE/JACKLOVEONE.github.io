<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AK_Gang&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-23T11:31:56.557Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>AK_Gang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>后缀数组学习笔记</title>
    <link href="http://yoursite.com/2018/04/23/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/04/23/后缀数组学习笔记/</id>
    <published>2018-04-23T07:46:18.663Z</published>
    <updated>2018-04-23T11:31:56.557Z</updated>
    
    <content type="html"><![CDATA[<h2 id="后缀数组有什么用？"><a href="#后缀数组有什么用？" class="headerlink" title="后缀数组有什么用？"></a>后缀数组有什么用？</h2><p>处理字符串的一大利器</p><p>感觉这东西有点玄，网上也没有什么比较简单的讲解，我弄了几天（太菜）</p><p>写个学习笔记！！</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1.dc3</p><p>2.倍增</p><p>由于本人太菜，只会倍增，就讲讲倍增吧</p><h2 id="学习前提"><a href="#学习前提" class="headerlink" title="学习前提"></a>学习前提</h2><p>首先大家得食用一下基数排序，可以到百度百科学习，有个大概的印象就好</p><h2 id="一些定义"><a href="#一些定义" class="headerlink" title="一些定义"></a>一些定义</h2><p>sa[i]：排名为i的后缀的起始位置</p><p>Rank[i]：从第i个位置开始的后缀的排名</p><p>y[i]：意义与sa[i]一样，基数排序过程中要用</p><p>ch[i]：字符串</p><p>c[i]：统计次数（基数排序）</p><p>sa[i],rank[i]只要我们知道一个便可以将另一个求出</p><p>比如sa[i]=k;则rank[sa[i]]=i(rank[k]=i);</p><h2 id="倍增"><a href="#倍增" class="headerlink" title="倍增"></a>倍增</h2><p>简单的讲啊，倍增就是先处理长度为1的后缀的排名，再处理长度为2的后缀的排名</p><p>接着是长度为4的，然后是8……一直到长度k大于了字符串长度n；</p><p>暴力的话复杂度太高，倍增的话复杂度可以做到O（nlogn）</p><p>这样倍增有什么好处呢？？</p><p>我们假定现在已经处理到长度为2^k的后缀了，（2^0,2^1,…..2^(k-1)已经处理）</p><p>那么此时的排名其实可以通过长度为2^(k-1)的后缀的排名求出的</p><p>2^k可有两个（2^(k-1)）的字符串拼成</p><p>只需将这两个（2^(k-1)）的字符串分别作为基数排序的一，二关键字进行排序就可以得到此轮rank,sa。</p><p>来一张经典的图加深理解</p><p><img src="1.png" alt=""></p><p>注意如果没有第二关键字则补0；</p><h2 id="长度为1"><a href="#长度为1" class="headerlink" title="长度为1"></a>长度为1</h2><p>代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)Rank[i]=ch[i];<span class="comment">//首先Rank赋为字符串的asc码，即它的名</span></span><br><span class="line"><span class="comment">//基数排序过程`</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)c[Rank[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;--i)sa[c[Rank[i]]--]=i;<span class="comment">//--可以出理有字符串相同的情况</span></span><br></pre></td></tr></table></figure><h2 id="长度大于1"><a href="#长度大于1" class="headerlink" title="长度大于1"></a>长度大于1</h2><p>接下来是一段很重要的代码，注意理解</p><p>第二关键字的位置等于第一关键字的位置加上此时处理的后缀长度。</p><p>第一个循环枚举第一关键字位置</p><p>第二个枚举第二关键字位置</p><p>此轮的y直接可以从上轮的sa得到</p><p>y[k]=i表示排名为k的与第二关键字配对的第一关键字的位置</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n-ln+<span class="number">1</span>;i&lt;=n;++i)y[++k]=i;<span class="comment">//考虑补0的情况，肯定排在前面</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(sa[i]&gt;ln)y[++k]=sa[i]-ln;</span><br></pre></td></tr></table></figure><p>这两个循环已经将第二关键字排序了，因为sa是有序的，枚举是从（i….n）已按大小排列</p><p>大家再揣摩一下</p><p>接下来排序第一关键字</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)wr[i]=Rank[i];<span class="comment">//拷贝一下</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)c[wr[y[i]]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;--i)sa[c[wr[y[i]]]--]=y[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)wr[i]=Rank[i];</span><br></pre></td></tr></table></figure><p>这个比较好理解，就不讲了</p><p>最后更新Rank</p><p>要判一下重，相等的字符串给予相同的排名</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> k1,<span class="keyword">int</span> k2,<span class="keyword">int</span> ls)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> wr[k1]==wr[k2]&amp;&amp;wr[k1+ls]==wr[k2+ls];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</span><br><span class="line">     <span class="keyword">if</span>(!cmp(sa[i],sa[i<span class="number">-1</span>],ln))++p;</span><br><span class="line">     Rank[sa[i]]=p;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000006</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> wr[maxn],y[maxn],a[maxn],Rank[maxn],k;</span><br><span class="line"><span class="keyword">int</span> sa[maxn],ln,p,n,m=<span class="number">256</span>,c[maxn];<span class="keyword">char</span> ch[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> k1,<span class="keyword">int</span> k2,<span class="keyword">int</span> ls)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> wr[k1]==wr[k2]&amp;&amp;wr[k1+ls]==wr[k2+ls];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)c[Rank[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;--i)sa[c[Rank[i]]--]=i;</span><br><span class="line">    ln=<span class="number">1</span>;p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;n)&#123;</span><br><span class="line">        k=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span> c);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-ln+<span class="number">1</span>;i&lt;=n;++i)y[++k]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(sa[i]&gt;ln)y[++k]=sa[i]-ln;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)wr[i]=Rank[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)c[wr[y[i]]]++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;--i)sa[c[wr[y[i]]]--]=y[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)wr[i]=Rank[i];</span><br><span class="line">        p=<span class="number">1</span>;Rank[sa[<span class="number">1</span>]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!cmp(sa[i],sa[i<span class="number">-1</span>],ln))++p;</span><br><span class="line">            Rank[sa[i]]=p;</span><br><span class="line">        &#125;m=p;ln&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);</span><br><span class="line">    n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)Rank[i]=ch[i];</span><br><span class="line">    DA();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="built_in">printf</span>(<span class="string">"%d "</span>,sa[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;后缀数组有什么用？&quot;&gt;&lt;a href=&quot;#后缀数组有什么用？&quot; class=&quot;headerlink&quot; title=&quot;后缀数组有什么用？&quot;&gt;&lt;/a&gt;后缀数组有什么用？&lt;/h2&gt;&lt;p&gt;处理字符串的一大利器&lt;/p&gt;
&lt;p&gt;感觉这东西有点玄，网上也没有什么比较简单的讲解，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/04/23/hello-world/"/>
    <id>http://yoursite.com/2018/04/23/hello-world/</id>
    <published>2018-04-23T04:48:37.624Z</published>
    <updated>2018-04-23T04:48:37.624Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
